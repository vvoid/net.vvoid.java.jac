package net.vvoid.java.jac;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author root
 */
public class JustAConsoleGUI extends javax.swing.JFrame {

  /**
   * Creates new form JustAConsoleGUI
   */
  public JustAConsoleGUI() throws IOException {
    initComponents();

    new Cfg().readCfg();
    for (String tab : Cfg.cfg.tabs) {
      CommandTabjPanel commandTabjPanel = new CommandTabjPanel(new HistoryManager(tab));
      commandTabjPanel.setName(tab);
      cmdRunnerjTabbedPane.add(commandTabjPanel);
    }

    this.setLocation(Cfg.cfg.windowPositionX, Cfg.cfg.windowPositionY);
    this.setSize(Cfg.cfg.windowWidth, Cfg.cfg.windowHeight);

    cmdRunnerjTabbedPane.setComponentPopupMenu(tabjPopupMenu);
    clearCmdAndFocus();

    ChangeListener changeListener = new ChangeListener() {
      @Override
      public void stateChanged(ChangeEvent changeEvent) {

        SwingUtilities.invokeLater(new Runnable() {
          public void run() {
            CommandTabjPanel commandTabjPanel = clearCmdAndFocus();

            JTabbedPane sourceTabbedPane = (JTabbedPane) changeEvent.getSource();
            int index = sourceTabbedPane.getSelectedIndex();
          }
        });

      }

    };

    cmdRunnerjTabbedPane.addChangeListener(changeListener);

  }

  public CommandTabjPanel clearCmdAndFocus() {
    CommandTabjPanel commandTabjPanel = (CommandTabjPanel) cmdRunnerjTabbedPane.getSelectedComponent();
    String txt = commandTabjPanel.commandjTextField.getText();
    commandTabjPanel.commandjTextField.setText("                                                                                       ");
    commandTabjPanel.commandjTextField.setText(txt);
    commandTabjPanel.commandjTextField.requestFocusInWindow();

    cmdRunnerjTabbedPane.repaint();

    return commandTabjPanel;
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    editMenu = new javax.swing.JMenu();
    cutMenuItem = new javax.swing.JMenuItem();
    copyMenuItem = new javax.swing.JMenuItem();
    pasteMenuItem = new javax.swing.JMenuItem();
    deleteMenuItem = new javax.swing.JMenuItem();
    tabjPopupMenu = new javax.swing.JPopupMenu();
    newjMenuItem = new javax.swing.JMenuItem();
    renamejMenuItem = new javax.swing.JMenuItem();
    deletejMenuItem = new javax.swing.JMenuItem();
    cmdRunnerjTabbedPane = new javax.swing.JTabbedPane();
    menuBar = new javax.swing.JMenuBar();
    fileMenu = new javax.swing.JMenu();
    jMenuItem1 = new javax.swing.JMenuItem();
    saveMenuItem = new javax.swing.JMenuItem();
    exitMenuItem = new javax.swing.JMenuItem();
    helpMenu = new javax.swing.JMenu();
    contentsMenuItem = new javax.swing.JMenuItem();
    aboutMenuItem = new javax.swing.JMenuItem();

    editMenu.setMnemonic('e');
    editMenu.setText("Edit");

    cutMenuItem.setMnemonic('t');
    cutMenuItem.setText("Cut");
    editMenu.add(cutMenuItem);

    copyMenuItem.setMnemonic('y');
    copyMenuItem.setText("Copy");
    editMenu.add(copyMenuItem);

    pasteMenuItem.setMnemonic('p');
    pasteMenuItem.setText("Paste");
    editMenu.add(pasteMenuItem);

    deleteMenuItem.setMnemonic('d');
    deleteMenuItem.setText("Delete");
    editMenu.add(deleteMenuItem);

    newjMenuItem.setText("new");
    newjMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        newjMenuItemActionPerformed(evt);
      }
    });
    tabjPopupMenu.add(newjMenuItem);

    renamejMenuItem.setText("rename");
    renamejMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        renamejMenuItemActionPerformed(evt);
      }
    });
    tabjPopupMenu.add(renamejMenuItem);

    deletejMenuItem.setText("delete");
    deletejMenuItem.setToolTipText("");
    deletejMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deletejMenuItemActionPerformed(evt);
      }
    });
    tabjPopupMenu.add(deletejMenuItem);

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Just a Console");
    setBackground(new java.awt.Color(255, 51, 51));
    setMinimumSize(new java.awt.Dimension(640, 480));
    setPreferredSize(new java.awt.Dimension(640, 480));
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowClosed(java.awt.event.WindowEvent evt) {
        formWindowClosed(evt);
      }
    });

    cmdRunnerjTabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
    cmdRunnerjTabbedPane.setDoubleBuffered(true);
    cmdRunnerjTabbedPane.setFocusable(false);
    cmdRunnerjTabbedPane.addComponentListener(new java.awt.event.ComponentAdapter() {
      public void componentShown(java.awt.event.ComponentEvent evt) {
        cmdRunnerjTabbedPaneComponentShown(evt);
      }
    });

    fileMenu.setMnemonic('f');
    fileMenu.setText("File");

    jMenuItem1.setText("New Tab");
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem1ActionPerformed(evt);
      }
    });
    fileMenu.add(jMenuItem1);

    saveMenuItem.setMnemonic('s');
    saveMenuItem.setText("Save History");
    saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        saveMenuItemActionPerformed(evt);
      }
    });
    fileMenu.add(saveMenuItem);

    exitMenuItem.setMnemonic('x');
    exitMenuItem.setText("Exit / Quit");
    exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exitMenuItemActionPerformed(evt);
      }
    });
    fileMenu.add(exitMenuItem);

    menuBar.add(fileMenu);

    helpMenu.setMnemonic('h');
    helpMenu.setText("Help");

    contentsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
    contentsMenuItem.setMnemonic('c');
    contentsMenuItem.setText("Contents");
    contentsMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        contentsMenuItemActionPerformed(evt);
      }
    });
    helpMenu.add(contentsMenuItem);

    aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
    aboutMenuItem.setMnemonic('a');
    aboutMenuItem.setText("About");
    aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        aboutMenuItemActionPerformed(evt);
      }
    });
    helpMenu.add(aboutMenuItem);

    menuBar.add(helpMenu);

    setJMenuBar(menuBar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(cmdRunnerjTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(cmdRunnerjTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
    );

    setSize(new java.awt.Dimension(656, 520));
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
      exit();
    }//GEN-LAST:event_exitMenuItemActionPerformed

  private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    exit();
  }//GEN-LAST:event_formWindowClosed

  private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
    for (int i = 0; i < cmdRunnerjTabbedPane.getTabCount(); i++) {
      CommandTabjPanel commandTabjPanel = (CommandTabjPanel) cmdRunnerjTabbedPane.getComponentAt(i);
      commandTabjPanel.saveHistory();
    }
  }//GEN-LAST:event_saveMenuItemActionPerformed

  private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
    AboutJFrame aboutJFrame = new AboutJFrame();
    aboutJFrame.setVisible(true);
  }//GEN-LAST:event_aboutMenuItemActionPerformed

  private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    CommandTabjPanel commandTabjPanel = null;
    try {
      commandTabjPanel = new CommandTabjPanel(new HistoryManager("" + Cfg.cfg.tabs.size()));
    } catch (IOException ex) {
      Logger.getLogger(JustAConsoleGUI.class.getName()).log(Level.SEVERE, null, ex);
    }
    commandTabjPanel.setName("" + cmdRunnerjTabbedPane.getTabCount());
    cmdRunnerjTabbedPane.add(commandTabjPanel);
  }//GEN-LAST:event_jMenuItem1ActionPerformed

  private void renamejMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renamejMenuItemActionPerformed
    int i = cmdRunnerjTabbedPane.getSelectedIndex();
    CommandTabjPanel commandTabjPanel = (CommandTabjPanel) cmdRunnerjTabbedPane.getSelectedComponent();

    String name = (String) JOptionPane.showInputDialog(
      null,
      "rename to:",
      "Customized Dialog",
      JOptionPane.PLAIN_MESSAGE,
      null,
      null,
      ""
    );

    System.out.println("name: " + name);

    if ((name != null) && (name.length() > 0)) {
      commandTabjPanel.setName(name);
      commandTabjPanel.getHistoryManager().rename(name);
      cmdRunnerjTabbedPane.setTitleAt(i, name);
    }

  }//GEN-LAST:event_renamejMenuItemActionPerformed

  private void deletejMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejMenuItemActionPerformed
    CommandTabjPanel commandTabjPanel = (CommandTabjPanel) cmdRunnerjTabbedPane.getSelectedComponent();
    try {
      commandTabjPanel.getHistoryManager().close();
    } catch (IOException ex) {
      Logger.getLogger(JustAConsoleGUI.class.getName()).log(Level.SEVERE, null, ex);
    }
    cmdRunnerjTabbedPane.remove(commandTabjPanel);

  }//GEN-LAST:event_deletejMenuItemActionPerformed

  private void newjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newjMenuItemActionPerformed
    try {
      int newTabCount = cmdRunnerjTabbedPane.getTabCount() + 1;
      CommandTabjPanel commandTabjPanel = new CommandTabjPanel(new HistoryManager("" + newTabCount));
      commandTabjPanel.setName("" + newTabCount);
      cmdRunnerjTabbedPane.add(commandTabjPanel);
      cmdRunnerjTabbedPane.setSelectedComponent(commandTabjPanel);

    } catch (IOException ex) {
      Logger.getLogger(JustAConsoleGUI.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_newjMenuItemActionPerformed

  private void cmdRunnerjTabbedPaneComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cmdRunnerjTabbedPaneComponentShown

    cmdRunnerjTabbedPane.repaint();
  }//GEN-LAST:event_cmdRunnerjTabbedPaneComponentShown

  
  private void contentsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentsMenuItemActionPerformed
    HelpJFrame helpJFrame = new HelpJFrame();
    helpJFrame.setVisible(true);
  }//GEN-LAST:event_contentsMenuItemActionPerformed

  private void exit() {

    Cfg.cfg.windowPositionX = this.getX();
    Cfg.cfg.windowPositionY = this.getY();
    Cfg.cfg.windowWidth = this.getWidth();
    Cfg.cfg.windowHeight = this.getHeight();

    Cfg.cfg.tabs.clear();
    for (int i = 0; i < cmdRunnerjTabbedPane.getTabCount(); i++) {
      CommandTabjPanel commandTabjPanel = (CommandTabjPanel) cmdRunnerjTabbedPane.getComponentAt(i);
      commandTabjPanel.saveHistory();
      Cfg.cfg.tabs.add(commandTabjPanel.getName());
    }

    try {
      Cfg.cfg.saveCfg();
    } catch (IOException ex) {
      Logger.getLogger(JustAConsoleGUI.class.getName()).log(Level.SEVERE, null, ex);
    }

    System.exit(0);

  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(JustAConsoleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(JustAConsoleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(JustAConsoleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(JustAConsoleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        try {
          new JustAConsoleGUI().setVisible(true);
        } catch (IOException ex) {
          Logger.getLogger(JustAConsoleGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuItem aboutMenuItem;
  public javax.swing.JTabbedPane cmdRunnerjTabbedPane;
  private javax.swing.JMenuItem contentsMenuItem;
  private javax.swing.JMenuItem copyMenuItem;
  private javax.swing.JMenuItem cutMenuItem;
  private javax.swing.JMenuItem deleteMenuItem;
  private javax.swing.JMenuItem deletejMenuItem;
  private javax.swing.JMenu editMenu;
  private javax.swing.JMenuItem exitMenuItem;
  private javax.swing.JMenu fileMenu;
  private javax.swing.JMenu helpMenu;
  private javax.swing.JMenuItem jMenuItem1;
  private javax.swing.JMenuBar menuBar;
  private javax.swing.JMenuItem newjMenuItem;
  private javax.swing.JMenuItem pasteMenuItem;
  private javax.swing.JMenuItem renamejMenuItem;
  private javax.swing.JMenuItem saveMenuItem;
  private javax.swing.JPopupMenu tabjPopupMenu;
  // End of variables declaration//GEN-END:variables

}
